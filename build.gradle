buildscript{
  ext {
    querydslPluginVersion = '1.0.10'
  }
  repositories {
    maven { url "https://plugins.gradle.org/m2/"}
  }
  dependencies{
    classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
  }
}

plugins {
    id "org.springframework.boot" version "2.3.1.RELEASE"
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "io.franzbecker.gradle-lombok" version "4.0.0"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"    
    id "java"
    id "idea"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //jpa를 springboot에서 쉽게 다루기 위한 dependency
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    compileOnly 'org.projectlombok:lombok:1.16.6'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.hamcrest:hamcrest-library'          //Junit 테스트
//    implementation 'junit:junit:4.4'
//    implementation 'org.hsqldb:hsqldb'        //내장 DB
    implementation 'org.springframework.boot:spring-boot-devtools'
    compile("com.querydsl:querydsl-jpa")
    compile("com.querydsl:querydsl-apt")
//    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
//		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude module: 'junit'

	}
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.1'){
      exclude module : 'junit-platform-commons'
    }
//    testCompile('org.junit.jupiter:junit-jupiter-params:5.5.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.1')
    testRuntimeOnly('org.junit.platform:junit-platform-engine:1.5.1')
    testRuntimeOnly('org.junit.platform:junit-platform-commons:1.5.1')
}

apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치
//def querydslSrcDir = 'src/main/java' // QClass 생성 위치


test {
	useJUnitPlatform()
}


querydsl {
  library = "com.querydsl:querydsl-apt"
  jpa = true
  querydslSourcesDir = querydslSrcDir
}

sourceSets {
  main {
      java {
          srcDirs = ['src/main/java', querydslSrcDir]
      }
  }
}

compileQuerydsl{
  options.annotationProcessorPath = configurations.querydsl
}

configurations {
  querydsl.extendsFrom compileClasspath
}